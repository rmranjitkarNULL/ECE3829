`timescale 1ns / 1ps  // Defines the simulation time precision and unit

//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 02/21/2025 10:16:18 AM
// Design Name: 
// Module Name: clock_gen
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// Generates a 10 MHz clock using an MMCM module and synchronizes 
//              the reset signal to avoid metastability issues.
// 
// Dependencies: Requires an MMCM module (clk_wiz_0) that generates a 10 MHz output clock.
//
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////

module clock_gen(
    output wire clk_10MHz,  // Output: 10 MHz clock signal generated by MMCM
    output wire reset_n,    // Output: Active-low reset signal (synchronized)
    input btnC,             // Input: Active-high reset signal from push button
    input clk               // Input: Main system clock (frequency depends on design)
);

    // Internal signal declaration
    wire locked;             // Wire to capture locked signal from MMCM
    reg flip = 0, flop = 0;  // Registers for synchronizing the locked signal

    // Instantiate MMCM Clock Generator
    clk_wiz_0 clm_mmcm (
        .clk_10MHz(clk_10MHz), // Output clock from MMCM set to 10 MHz
        .reset(btnC),          // Active-high reset input for MMCM (btnC resets the MMCM)
        .locked(locked),       // Output locked signal from MMCM (indicates stable clock)
        .clk_in1(clk)          // Input clock to MMCM (provided by the system)
    );

    // Synchronize the locked signal to avoid metastability issues
    always @(posedge clk_10MHz) begin
        flip <= locked;  // First stage flip-flop captures locked signal
        flop <= flip;    // Second stage flip-flop ensures stable transition
    end 

    // Assign synchronized reset signal (active-low) to reset_n
    assign reset_n = flop;  // Ensures reset is properly synchronized with 10 MHz clock

endmodule
